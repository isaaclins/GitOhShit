name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Build application
        run: npm run build

      - name: Build and publish Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:electron -- --linux --publish=always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:electron -- --mac --publish=always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build and publish Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:electron -- --win --publish=always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Git-O-Shit ${{ steps.version.outputs.VERSION }}
          body: |
            ## What's Changed

            ðŸš€ New release of Git-O-Shit!

            ### Download
            - **Linux**: Download the `.AppImage` file
            - **macOS**: Download the `.dmg` file  
            - **Windows**: Download the `.exe` file

            ### Installation
            - **Linux**: Make the AppImage executable and run it
            - **macOS**: Open the DMG and drag the app to Applications
            - **Windows**: Run the installer executable

            Full changelog: https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}
          draft: false
          prerelease: false
